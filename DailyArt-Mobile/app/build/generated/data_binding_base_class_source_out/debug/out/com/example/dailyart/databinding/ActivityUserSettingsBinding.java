// Generated by view binder compiler. Do not edit!
package com.example.dailyart.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.dailyart.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUserSettingsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout ConstraintLayout;

  @NonNull
  public final Button btnUpdate;

  @NonNull
  public final ImageView imgProfilePhotoUpdate;

  @NonNull
  public final EditText tvBirthdayUpdate;

  @NonNull
  public final EditText tvEmailUpdate;

  @NonNull
  public final EditText tvPasswordUpdateNew;

  @NonNull
  public final EditText tvPasswordUpdateOld;

  private ActivityUserSettingsBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout ConstraintLayout, @NonNull Button btnUpdate,
      @NonNull ImageView imgProfilePhotoUpdate, @NonNull EditText tvBirthdayUpdate,
      @NonNull EditText tvEmailUpdate, @NonNull EditText tvPasswordUpdateNew,
      @NonNull EditText tvPasswordUpdateOld) {
    this.rootView = rootView;
    this.ConstraintLayout = ConstraintLayout;
    this.btnUpdate = btnUpdate;
    this.imgProfilePhotoUpdate = imgProfilePhotoUpdate;
    this.tvBirthdayUpdate = tvBirthdayUpdate;
    this.tvEmailUpdate = tvEmailUpdate;
    this.tvPasswordUpdateNew = tvPasswordUpdateNew;
    this.tvPasswordUpdateOld = tvPasswordUpdateOld;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUserSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUserSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_user_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUserSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout ConstraintLayout = (ConstraintLayout) rootView;

      id = R.id.btnUpdate;
      Button btnUpdate = ViewBindings.findChildViewById(rootView, id);
      if (btnUpdate == null) {
        break missingId;
      }

      id = R.id.imgProfilePhotoUpdate;
      ImageView imgProfilePhotoUpdate = ViewBindings.findChildViewById(rootView, id);
      if (imgProfilePhotoUpdate == null) {
        break missingId;
      }

      id = R.id.tvBirthdayUpdate;
      EditText tvBirthdayUpdate = ViewBindings.findChildViewById(rootView, id);
      if (tvBirthdayUpdate == null) {
        break missingId;
      }

      id = R.id.tvEmailUpdate;
      EditText tvEmailUpdate = ViewBindings.findChildViewById(rootView, id);
      if (tvEmailUpdate == null) {
        break missingId;
      }

      id = R.id.tvPasswordUpdateNew;
      EditText tvPasswordUpdateNew = ViewBindings.findChildViewById(rootView, id);
      if (tvPasswordUpdateNew == null) {
        break missingId;
      }

      id = R.id.tvPasswordUpdateOld;
      EditText tvPasswordUpdateOld = ViewBindings.findChildViewById(rootView, id);
      if (tvPasswordUpdateOld == null) {
        break missingId;
      }

      return new ActivityUserSettingsBinding((ConstraintLayout) rootView, ConstraintLayout,
          btnUpdate, imgProfilePhotoUpdate, tvBirthdayUpdate, tvEmailUpdate, tvPasswordUpdateNew,
          tvPasswordUpdateOld);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
