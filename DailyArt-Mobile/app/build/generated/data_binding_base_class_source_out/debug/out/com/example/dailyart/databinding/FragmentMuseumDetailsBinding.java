// Generated by view binder compiler. Do not edit!
package com.example.dailyart.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.RatingBar;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.dailyart.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.ms.square.android.expandabletextview.ExpandableTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMuseumDetailsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnMuseumCollection;

  @NonNull
  public final Button btnPublishReviewMuseum;

  @NonNull
  public final Button btnShowAllReviewMuseum;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final ConstraintLayout costraintLayout2;

  @NonNull
  public final View divider11;

  @NonNull
  public final View divider12;

  @NonNull
  public final View divider2;

  @NonNull
  public final View divider3;

  @NonNull
  public final ImageButton expandCollapse;

  @NonNull
  public final ExpandableTextView expandTextView;

  @NonNull
  public final TextView expandableText;

  @NonNull
  public final FloatingActionButton fabAddMuseum;

  @NonNull
  public final FloatingActionButton fabFavouritesMuseum;

  @NonNull
  public final FloatingActionButton fabVisitedMuseum;

  @NonNull
  public final ImageView imgMuseumDetails;

  @NonNull
  public final RatingBar ratingBarReviewMuseum;

  @NonNull
  public final RecyclerView recyclerReviewArtwork;

  @NonNull
  public final RecyclerView recyclerReviewMuseum;

  @NonNull
  public final ScrollView scrollView3;

  @NonNull
  public final TextView textView10;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextView textView6;

  @NonNull
  public final TextView tvMuseumAddress;

  @NonNull
  public final TextView tvMuseumCity;

  @NonNull
  public final TextView tvMuseumName;

  @NonNull
  public final TextView tvMuseumTelephone;

  @NonNull
  public final TextView tvMuseumWebsite;

  @NonNull
  public final TextView tvNoReview;

  @NonNull
  public final EditText tvReviewDescriptionMuseum;

  private FragmentMuseumDetailsBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnMuseumCollection, @NonNull Button btnPublishReviewMuseum,
      @NonNull Button btnShowAllReviewMuseum, @NonNull ConstraintLayout constraintLayout,
      @NonNull ConstraintLayout costraintLayout2, @NonNull View divider11, @NonNull View divider12,
      @NonNull View divider2, @NonNull View divider3, @NonNull ImageButton expandCollapse,
      @NonNull ExpandableTextView expandTextView, @NonNull TextView expandableText,
      @NonNull FloatingActionButton fabAddMuseum, @NonNull FloatingActionButton fabFavouritesMuseum,
      @NonNull FloatingActionButton fabVisitedMuseum, @NonNull ImageView imgMuseumDetails,
      @NonNull RatingBar ratingBarReviewMuseum, @NonNull RecyclerView recyclerReviewArtwork,
      @NonNull RecyclerView recyclerReviewMuseum, @NonNull ScrollView scrollView3,
      @NonNull TextView textView10, @NonNull TextView textView2, @NonNull TextView textView6,
      @NonNull TextView tvMuseumAddress, @NonNull TextView tvMuseumCity,
      @NonNull TextView tvMuseumName, @NonNull TextView tvMuseumTelephone,
      @NonNull TextView tvMuseumWebsite, @NonNull TextView tvNoReview,
      @NonNull EditText tvReviewDescriptionMuseum) {
    this.rootView = rootView;
    this.btnMuseumCollection = btnMuseumCollection;
    this.btnPublishReviewMuseum = btnPublishReviewMuseum;
    this.btnShowAllReviewMuseum = btnShowAllReviewMuseum;
    this.constraintLayout = constraintLayout;
    this.costraintLayout2 = costraintLayout2;
    this.divider11 = divider11;
    this.divider12 = divider12;
    this.divider2 = divider2;
    this.divider3 = divider3;
    this.expandCollapse = expandCollapse;
    this.expandTextView = expandTextView;
    this.expandableText = expandableText;
    this.fabAddMuseum = fabAddMuseum;
    this.fabFavouritesMuseum = fabFavouritesMuseum;
    this.fabVisitedMuseum = fabVisitedMuseum;
    this.imgMuseumDetails = imgMuseumDetails;
    this.ratingBarReviewMuseum = ratingBarReviewMuseum;
    this.recyclerReviewArtwork = recyclerReviewArtwork;
    this.recyclerReviewMuseum = recyclerReviewMuseum;
    this.scrollView3 = scrollView3;
    this.textView10 = textView10;
    this.textView2 = textView2;
    this.textView6 = textView6;
    this.tvMuseumAddress = tvMuseumAddress;
    this.tvMuseumCity = tvMuseumCity;
    this.tvMuseumName = tvMuseumName;
    this.tvMuseumTelephone = tvMuseumTelephone;
    this.tvMuseumWebsite = tvMuseumWebsite;
    this.tvNoReview = tvNoReview;
    this.tvReviewDescriptionMuseum = tvReviewDescriptionMuseum;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMuseumDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMuseumDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_museum_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMuseumDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnMuseumCollection;
      Button btnMuseumCollection = ViewBindings.findChildViewById(rootView, id);
      if (btnMuseumCollection == null) {
        break missingId;
      }

      id = R.id.btnPublishReviewMuseum;
      Button btnPublishReviewMuseum = ViewBindings.findChildViewById(rootView, id);
      if (btnPublishReviewMuseum == null) {
        break missingId;
      }

      id = R.id.btnShowAllReviewMuseum;
      Button btnShowAllReviewMuseum = ViewBindings.findChildViewById(rootView, id);
      if (btnShowAllReviewMuseum == null) {
        break missingId;
      }

      ConstraintLayout constraintLayout = (ConstraintLayout) rootView;

      id = R.id.costraintLayout2;
      ConstraintLayout costraintLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (costraintLayout2 == null) {
        break missingId;
      }

      id = R.id.divider11;
      View divider11 = ViewBindings.findChildViewById(rootView, id);
      if (divider11 == null) {
        break missingId;
      }

      id = R.id.divider12;
      View divider12 = ViewBindings.findChildViewById(rootView, id);
      if (divider12 == null) {
        break missingId;
      }

      id = R.id.divider2;
      View divider2 = ViewBindings.findChildViewById(rootView, id);
      if (divider2 == null) {
        break missingId;
      }

      id = R.id.divider3;
      View divider3 = ViewBindings.findChildViewById(rootView, id);
      if (divider3 == null) {
        break missingId;
      }

      id = R.id.expand_collapse;
      ImageButton expandCollapse = ViewBindings.findChildViewById(rootView, id);
      if (expandCollapse == null) {
        break missingId;
      }

      id = R.id.expand_text_view;
      ExpandableTextView expandTextView = ViewBindings.findChildViewById(rootView, id);
      if (expandTextView == null) {
        break missingId;
      }

      id = R.id.expandable_text;
      TextView expandableText = ViewBindings.findChildViewById(rootView, id);
      if (expandableText == null) {
        break missingId;
      }

      id = R.id.fab_add_museum;
      FloatingActionButton fabAddMuseum = ViewBindings.findChildViewById(rootView, id);
      if (fabAddMuseum == null) {
        break missingId;
      }

      id = R.id.fab_favourites_museum;
      FloatingActionButton fabFavouritesMuseum = ViewBindings.findChildViewById(rootView, id);
      if (fabFavouritesMuseum == null) {
        break missingId;
      }

      id = R.id.fab_visited_museum;
      FloatingActionButton fabVisitedMuseum = ViewBindings.findChildViewById(rootView, id);
      if (fabVisitedMuseum == null) {
        break missingId;
      }

      id = R.id.imgMuseumDetails;
      ImageView imgMuseumDetails = ViewBindings.findChildViewById(rootView, id);
      if (imgMuseumDetails == null) {
        break missingId;
      }

      id = R.id.ratingBarReviewMuseum;
      RatingBar ratingBarReviewMuseum = ViewBindings.findChildViewById(rootView, id);
      if (ratingBarReviewMuseum == null) {
        break missingId;
      }

      id = R.id.recyclerReviewArtwork;
      RecyclerView recyclerReviewArtwork = ViewBindings.findChildViewById(rootView, id);
      if (recyclerReviewArtwork == null) {
        break missingId;
      }

      id = R.id.recyclerReviewMuseum;
      RecyclerView recyclerReviewMuseum = ViewBindings.findChildViewById(rootView, id);
      if (recyclerReviewMuseum == null) {
        break missingId;
      }

      id = R.id.scrollView3;
      ScrollView scrollView3 = ViewBindings.findChildViewById(rootView, id);
      if (scrollView3 == null) {
        break missingId;
      }

      id = R.id.textView10;
      TextView textView10 = ViewBindings.findChildViewById(rootView, id);
      if (textView10 == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.textView6;
      TextView textView6 = ViewBindings.findChildViewById(rootView, id);
      if (textView6 == null) {
        break missingId;
      }

      id = R.id.tvMuseumAddress;
      TextView tvMuseumAddress = ViewBindings.findChildViewById(rootView, id);
      if (tvMuseumAddress == null) {
        break missingId;
      }

      id = R.id.tvMuseumCity;
      TextView tvMuseumCity = ViewBindings.findChildViewById(rootView, id);
      if (tvMuseumCity == null) {
        break missingId;
      }

      id = R.id.tvMuseumName;
      TextView tvMuseumName = ViewBindings.findChildViewById(rootView, id);
      if (tvMuseumName == null) {
        break missingId;
      }

      id = R.id.tvMuseumTelephone;
      TextView tvMuseumTelephone = ViewBindings.findChildViewById(rootView, id);
      if (tvMuseumTelephone == null) {
        break missingId;
      }

      id = R.id.tvMuseumWebsite;
      TextView tvMuseumWebsite = ViewBindings.findChildViewById(rootView, id);
      if (tvMuseumWebsite == null) {
        break missingId;
      }

      id = R.id.tvNoReview;
      TextView tvNoReview = ViewBindings.findChildViewById(rootView, id);
      if (tvNoReview == null) {
        break missingId;
      }

      id = R.id.tvReviewDescriptionMuseum;
      EditText tvReviewDescriptionMuseum = ViewBindings.findChildViewById(rootView, id);
      if (tvReviewDescriptionMuseum == null) {
        break missingId;
      }

      return new FragmentMuseumDetailsBinding((ConstraintLayout) rootView, btnMuseumCollection,
          btnPublishReviewMuseum, btnShowAllReviewMuseum, constraintLayout, costraintLayout2,
          divider11, divider12, divider2, divider3, expandCollapse, expandTextView, expandableText,
          fabAddMuseum, fabFavouritesMuseum, fabVisitedMuseum, imgMuseumDetails,
          ratingBarReviewMuseum, recyclerReviewArtwork, recyclerReviewMuseum, scrollView3,
          textView10, textView2, textView6, tvMuseumAddress, tvMuseumCity, tvMuseumName,
          tvMuseumTelephone, tvMuseumWebsite, tvNoReview, tvReviewDescriptionMuseum);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
