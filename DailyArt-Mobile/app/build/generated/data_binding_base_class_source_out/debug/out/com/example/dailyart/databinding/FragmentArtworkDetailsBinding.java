// Generated by view binder compiler. Do not edit!
package com.example.dailyart.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.RatingBar;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.dailyart.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.ms.square.android.expandabletextview.ExpandableTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentArtworkDetailsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnPlayAudio;

  @NonNull
  public final Button btnPublishReviewArtwork;

  @NonNull
  public final Button btnShowReviewArtwork;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final View divider13;

  @NonNull
  public final View divider6;

  @NonNull
  public final View divider7;

  @NonNull
  public final View divider8;

  @NonNull
  public final View divider9;

  @NonNull
  public final ImageButton expandCollapse;

  @NonNull
  public final ExpandableTextView expandTextView;

  @NonNull
  public final TextView expandableText;

  @NonNull
  public final FloatingActionButton fabAchievement;

  @NonNull
  public final FloatingActionButton fabFavourites;

  @NonNull
  public final FloatingActionButton fabVisited;

  @NonNull
  public final ImageView imageArtistDetails;

  @NonNull
  public final ImageView imageArtworkMuseumDetails;

  @NonNull
  public final ConstraintLayout linearLayout2;

  @NonNull
  public final RatingBar ratingBarReviewArtwork;

  @NonNull
  public final RecyclerView recyclerReviewArtwork;

  @NonNull
  public final ScrollView scrollView3;

  @NonNull
  public final TextView textView11;

  @NonNull
  public final TextView textView66;

  @NonNull
  public final TextView tvArtistDate;

  @NonNull
  public final TextView tvArtistNameDetails;

  @NonNull
  public final TextView tvArtworkArtist;

  @NonNull
  public final TextView tvArtworkMuseumDetails;

  @NonNull
  public final TextView tvAudioGuide;

  @NonNull
  public final TextView tvNoReviewArtwork;

  @NonNull
  public final EditText tvReviewDescriptionArtwork;

  private FragmentArtworkDetailsBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnPlayAudio, @NonNull Button btnPublishReviewArtwork,
      @NonNull Button btnShowReviewArtwork, @NonNull ConstraintLayout constraintLayout,
      @NonNull View divider13, @NonNull View divider6, @NonNull View divider7,
      @NonNull View divider8, @NonNull View divider9, @NonNull ImageButton expandCollapse,
      @NonNull ExpandableTextView expandTextView, @NonNull TextView expandableText,
      @NonNull FloatingActionButton fabAchievement, @NonNull FloatingActionButton fabFavourites,
      @NonNull FloatingActionButton fabVisited, @NonNull ImageView imageArtistDetails,
      @NonNull ImageView imageArtworkMuseumDetails, @NonNull ConstraintLayout linearLayout2,
      @NonNull RatingBar ratingBarReviewArtwork, @NonNull RecyclerView recyclerReviewArtwork,
      @NonNull ScrollView scrollView3, @NonNull TextView textView11, @NonNull TextView textView66,
      @NonNull TextView tvArtistDate, @NonNull TextView tvArtistNameDetails,
      @NonNull TextView tvArtworkArtist, @NonNull TextView tvArtworkMuseumDetails,
      @NonNull TextView tvAudioGuide, @NonNull TextView tvNoReviewArtwork,
      @NonNull EditText tvReviewDescriptionArtwork) {
    this.rootView = rootView;
    this.btnPlayAudio = btnPlayAudio;
    this.btnPublishReviewArtwork = btnPublishReviewArtwork;
    this.btnShowReviewArtwork = btnShowReviewArtwork;
    this.constraintLayout = constraintLayout;
    this.divider13 = divider13;
    this.divider6 = divider6;
    this.divider7 = divider7;
    this.divider8 = divider8;
    this.divider9 = divider9;
    this.expandCollapse = expandCollapse;
    this.expandTextView = expandTextView;
    this.expandableText = expandableText;
    this.fabAchievement = fabAchievement;
    this.fabFavourites = fabFavourites;
    this.fabVisited = fabVisited;
    this.imageArtistDetails = imageArtistDetails;
    this.imageArtworkMuseumDetails = imageArtworkMuseumDetails;
    this.linearLayout2 = linearLayout2;
    this.ratingBarReviewArtwork = ratingBarReviewArtwork;
    this.recyclerReviewArtwork = recyclerReviewArtwork;
    this.scrollView3 = scrollView3;
    this.textView11 = textView11;
    this.textView66 = textView66;
    this.tvArtistDate = tvArtistDate;
    this.tvArtistNameDetails = tvArtistNameDetails;
    this.tvArtworkArtist = tvArtworkArtist;
    this.tvArtworkMuseumDetails = tvArtworkMuseumDetails;
    this.tvAudioGuide = tvAudioGuide;
    this.tvNoReviewArtwork = tvNoReviewArtwork;
    this.tvReviewDescriptionArtwork = tvReviewDescriptionArtwork;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentArtworkDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentArtworkDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_artwork_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentArtworkDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnPlayAudio;
      Button btnPlayAudio = ViewBindings.findChildViewById(rootView, id);
      if (btnPlayAudio == null) {
        break missingId;
      }

      id = R.id.btnPublishReviewArtwork;
      Button btnPublishReviewArtwork = ViewBindings.findChildViewById(rootView, id);
      if (btnPublishReviewArtwork == null) {
        break missingId;
      }

      id = R.id.btnShowReviewArtwork;
      Button btnShowReviewArtwork = ViewBindings.findChildViewById(rootView, id);
      if (btnShowReviewArtwork == null) {
        break missingId;
      }

      ConstraintLayout constraintLayout = (ConstraintLayout) rootView;

      id = R.id.divider13;
      View divider13 = ViewBindings.findChildViewById(rootView, id);
      if (divider13 == null) {
        break missingId;
      }

      id = R.id.divider6;
      View divider6 = ViewBindings.findChildViewById(rootView, id);
      if (divider6 == null) {
        break missingId;
      }

      id = R.id.divider7;
      View divider7 = ViewBindings.findChildViewById(rootView, id);
      if (divider7 == null) {
        break missingId;
      }

      id = R.id.divider8;
      View divider8 = ViewBindings.findChildViewById(rootView, id);
      if (divider8 == null) {
        break missingId;
      }

      id = R.id.divider9;
      View divider9 = ViewBindings.findChildViewById(rootView, id);
      if (divider9 == null) {
        break missingId;
      }

      id = R.id.expand_collapse;
      ImageButton expandCollapse = ViewBindings.findChildViewById(rootView, id);
      if (expandCollapse == null) {
        break missingId;
      }

      id = R.id.expand_text_view;
      ExpandableTextView expandTextView = ViewBindings.findChildViewById(rootView, id);
      if (expandTextView == null) {
        break missingId;
      }

      id = R.id.expandable_text;
      TextView expandableText = ViewBindings.findChildViewById(rootView, id);
      if (expandableText == null) {
        break missingId;
      }

      id = R.id.fab_achievement;
      FloatingActionButton fabAchievement = ViewBindings.findChildViewById(rootView, id);
      if (fabAchievement == null) {
        break missingId;
      }

      id = R.id.fab_favourites;
      FloatingActionButton fabFavourites = ViewBindings.findChildViewById(rootView, id);
      if (fabFavourites == null) {
        break missingId;
      }

      id = R.id.fab_visited;
      FloatingActionButton fabVisited = ViewBindings.findChildViewById(rootView, id);
      if (fabVisited == null) {
        break missingId;
      }

      id = R.id.imageArtistDetails;
      ImageView imageArtistDetails = ViewBindings.findChildViewById(rootView, id);
      if (imageArtistDetails == null) {
        break missingId;
      }

      id = R.id.imageArtworkMuseumDetails;
      ImageView imageArtworkMuseumDetails = ViewBindings.findChildViewById(rootView, id);
      if (imageArtworkMuseumDetails == null) {
        break missingId;
      }

      id = R.id.linearLayout2;
      ConstraintLayout linearLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout2 == null) {
        break missingId;
      }

      id = R.id.ratingBarReviewArtwork;
      RatingBar ratingBarReviewArtwork = ViewBindings.findChildViewById(rootView, id);
      if (ratingBarReviewArtwork == null) {
        break missingId;
      }

      id = R.id.recyclerReviewArtwork;
      RecyclerView recyclerReviewArtwork = ViewBindings.findChildViewById(rootView, id);
      if (recyclerReviewArtwork == null) {
        break missingId;
      }

      id = R.id.scrollView3;
      ScrollView scrollView3 = ViewBindings.findChildViewById(rootView, id);
      if (scrollView3 == null) {
        break missingId;
      }

      id = R.id.textView11;
      TextView textView11 = ViewBindings.findChildViewById(rootView, id);
      if (textView11 == null) {
        break missingId;
      }

      id = R.id.textView66;
      TextView textView66 = ViewBindings.findChildViewById(rootView, id);
      if (textView66 == null) {
        break missingId;
      }

      id = R.id.tvArtistDate;
      TextView tvArtistDate = ViewBindings.findChildViewById(rootView, id);
      if (tvArtistDate == null) {
        break missingId;
      }

      id = R.id.tvArtistNameDetails;
      TextView tvArtistNameDetails = ViewBindings.findChildViewById(rootView, id);
      if (tvArtistNameDetails == null) {
        break missingId;
      }

      id = R.id.tvArtworkArtist;
      TextView tvArtworkArtist = ViewBindings.findChildViewById(rootView, id);
      if (tvArtworkArtist == null) {
        break missingId;
      }

      id = R.id.tvArtworkMuseumDetails;
      TextView tvArtworkMuseumDetails = ViewBindings.findChildViewById(rootView, id);
      if (tvArtworkMuseumDetails == null) {
        break missingId;
      }

      id = R.id.tvAudioGuide;
      TextView tvAudioGuide = ViewBindings.findChildViewById(rootView, id);
      if (tvAudioGuide == null) {
        break missingId;
      }

      id = R.id.tvNoReviewArtwork;
      TextView tvNoReviewArtwork = ViewBindings.findChildViewById(rootView, id);
      if (tvNoReviewArtwork == null) {
        break missingId;
      }

      id = R.id.tvReviewDescriptionArtwork;
      EditText tvReviewDescriptionArtwork = ViewBindings.findChildViewById(rootView, id);
      if (tvReviewDescriptionArtwork == null) {
        break missingId;
      }

      return new FragmentArtworkDetailsBinding((ConstraintLayout) rootView, btnPlayAudio,
          btnPublishReviewArtwork, btnShowReviewArtwork, constraintLayout, divider13, divider6,
          divider7, divider8, divider9, expandCollapse, expandTextView, expandableText,
          fabAchievement, fabFavourites, fabVisited, imageArtistDetails, imageArtworkMuseumDetails,
          linearLayout2, ratingBarReviewArtwork, recyclerReviewArtwork, scrollView3, textView11,
          textView66, tvArtistDate, tvArtistNameDetails, tvArtworkArtist, tvArtworkMuseumDetails,
          tvAudioGuide, tvNoReviewArtwork, tvReviewDescriptionArtwork);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
